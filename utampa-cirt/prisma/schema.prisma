generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @unique
  f_name    String    @db.VarChar(50)
  l_name    String    @db.VarChar(50)
  email     String    @unique @db.VarChar(100)
  user_role Role      @default(Author)

  articles  Article[]
  reviews   Review[]  @relation("UserReviews")
}

model Article {
  id         Int       @id @default(autoincrement())
  paper_name String    @db.VarChar(255) 
  pdf_path   String    @db.VarChar(255)
  author_id  String?
  status     Status?
  type       ArticleType?
  createdAt  DateTime  @default(now())
  views      Int       @default(0)
  featured   Boolean   @default(false)

  author     User?     @relation(fields: [author_id], references: [id])
  keywords   Keyword[]
  reviews    Review[]  @relation("ArticleReviews")
}

model Keyword {
  id         Int      @id @default(autoincrement())
  article_id Int?
  keyword    String   @db.VarChar(50)

  article    Article? @relation(fields: [article_id], references: [id])
}

model Review {
  review_ID   Int      @id @default(autoincrement())
  article_id  Int
  reviewerId  String
  comments    String?  @db.Text
  createdAt   DateTime @default(now())

  article     Article  @relation("ArticleReviews", fields: [article_id], references: [id])
  reviewer    User     @relation("UserReviews", fields: [reviewerId], references: [id])
}

enum Role {
  Reviewer
  Author
  Editor
}

enum Status {
  Sent
  Under_Review
  Approved
  Declined
  Reviewed
  Revised
}

enum ArticleType {
  Article
  Journal
  Poster
  Paper
}
